# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job to build and upload the armadillo conan recipe
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax

      - name: Install gfortran
        run: sudo apt install -y gfortran

      - name: Install conan and conan_package_tools
        run: |
          pip install conan --upgrade
          pip install conan_package_tools --upgrade
          # echo `which conan`
          # echo `which conan` >> $GITHUB_PATH
          echo $GITHUB_PATH
          conan --version
      - name: Login into conan
        env:
          CONAN_USERNAME: "darcamo"
          CONAN_LOGIN_USERNAME: "darcamo"
          CONAN_CHANNEL: "stable"
          CONAN_UPLOAD: "https://api.bintray.com/conan/darcamo/cppsim"
          CONAN_BUILD_POLICY: "missing"
          CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
        run: conan user

      # Runs a set of commands using the runners shell
      - name: Build the package and upload it to bintray
        env:
          CONAN_USERNAME: "darcamo"
          CONAN_LOGIN_USERNAME: "darcamo"
          CONAN_CHANNEL: "stable"
          CONAN_UPLOAD: "https://api.bintray.com/conan/darcamo/cppsim"
          CONAN_BUILD_POLICY: "missing"
          CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
        run: python build.py
